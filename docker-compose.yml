version: '3.8'

services:
  # Удаляем сервис db полностью
  # db:
  #   image: postgres:15-alpine
  #   container_name: altailands_db
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   expose:
  #     - 5432
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  backend:
    build: . 
    container_name: altailands_backend
    # command: ... (оставляем как есть)
    volumes:
      - .:/app # Монтируем код для разработки
      - static_volume:/app/static_root 
      - media_volume:/app/media 
      # Добавляем монтирование файла SQLite, чтобы он сохранялся вне контейнера
      - ./db.sqlite3:/app/db.sqlite3 
    ports:
      - "8000:8000"
    env_file:
      - .env # Оставляем для других переменных (SECRET_KEY и т.д.)
    # Удаляем depends_on
    # depends_on:
    #   db:
    #     condition: service_healthy
    # Удаляем DATABASE_URL из environment
    # environment:
    #   - DATABASE_URL=${DATABASE_URL}
    # Оставляем только нужные переменные окружения для Django
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      # Можно добавить DEBUG, SECRET_KEY и т.д. сюда или оставить в .env

volumes:
  # Удаляем том postgres_data
  # postgres_data:
  static_volume: 
  media_volume:  